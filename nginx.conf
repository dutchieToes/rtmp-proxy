#user    nobody;
pid     /run/nginx.pid;
worker_processes  1;

events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            meta copy;
            #TWITCH_KEY
            #YOUTUBE_KEY
            record off;
            #SUBNET
            allow publish 10.0.0.0/8;
            allow publish 172.16.0.0/12;
            allow publish 169.254.0.0/16;
            allow publish 192.168.0.0/16;
            deny publish all;
            allow play all;
        }

        application twitch {
            live on;
            meta copy;
            #TWITCH_KEY
            record off;
            #SUBNET
            allow publish 10.0.0.0/8;
            allow publish 172.16.0.0/12;
            allow publish 169.254.0.0/16;
            allow publish 192.168.0.0/16;
            deny publish all;
            allow play all;
        }

        application youtube {
            live on;
            meta copy;
            #YOUTUBE_KEY
            record off;
            #SUBNET
            allow publish 10.0.0.0/8;
            allow publish 172.16.0.0/12;
            allow publish 169.254.0.0/16;
            allow publish 192.168.0.0/16;
            deny publish all;
            allow play all;
        }

        application local {
            live on;
            meta copy;
            record off;
            #record all;
            #record_path /mnt/video/flv;
            #record_unique on;
            exec ffmpeg -re -i rtmp://localhost:1935/$app/$name 
                -vcodec flv -acodec copy -s 1280x720
                -filter:v fps=fps=30
                -f flv rtmp://localhost:1935/lq/${name};
            #SUBNET
            allow publish 10.0.0.0/8;
            allow publish 172.16.0.0/12;
            allow publish 169.254.0.0/16;
            allow publish 192.168.0.0/16;
            deny publish all;
            allow play all;
        }

        application lq {
            live on;
            meta copy;
        }

    }
}
